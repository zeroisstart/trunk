 עיצוב כללי
==============

בהתבסס על ניתוח הדרישות שלנו, אנו מחליטים להשתמש בטבלאות מסד הנתונים הבאות כדי לאחסן את המידע עבור אפליקצית הבלוג שלנו:

 * `tbl_user` מאחסן את פרטי המשתמש, הכוללים את שם המשתמש והסיסמא.
 * `tbl_post` מאחסן את פרטי ההודעות. טבלה זו מכילה בעיקר את העמודות הבאות:
  - `title`: שדה חובה, כותרת ההודעה;
  - `content`: שדה חובה, תוכן ההודעה אשר משתמשת בתחביר בפורמט [Markdown](http://daringfireball.net/projects/markdown/syntax);
  - `status`: שדה חובה, סטטוס ההודעה, אשר יכלה להיות אחד מהערכים הבאים:
     *  1, אשר אומר שההודעה במצב טיוטה ואינה מוצגת לציבור הרחב.
     *  2, אשר אומר שההודעה במצב פעיל ומוצגת לציבור הרחב.
     *  3, אשר אומר שההודעה ישנה ואינה מוצגת ברשימת ההודעות (אך עדיין ניתן לגשת להודעה ישירות).
  - `tags`: אופציונלי, רשימה של מילות מפתח אשר מאפיינות את ההודעה מופרדות בפסיק.
 * `tbl_comment` מאחסן את תגובות ההודעות. כל תגובה מקושרת אל הודעה ובנויה בעיקר מהעמודות הבאות:
  - `name`: שדה חובה, שם המחבר של התגובה;
  - `email`: שדה חובה, כתובת הדואר האלקטרוני של מחבר התגובה;
  - `website`: אופציונלי, כתובת אתר הבית של מחבר התגובה;
  - `content`: שדה חובה, התגובה עצמה בפורמט של טקסט רגיל.
  - `status`: שדה חובה, סטטוס התגובה, אשר מייצג אם התגובה מאושרת (הערך יהיה 2) או לא (הערך יהיה 1).
 * `tbl_tag` מאחסן את תדירות תגיות ההודעות כדי ליצור את אפשרות ענן התגיות. הטבלה בנויה בעיקר מהעמודות הבאות:
  - `name`: שדה חובה, שם יחודי לתגית.
  - `frequency`: שדה חובה, מספר הפעמים שהתגית מופיע בהודעות.
 * `tbl_lookup` מאחסן בעיקר פרטי בדיקת מידע. זה בעיקר מהווה כמפה בין ערכים מספריים לבין טקסטים. הקודם הוא היצוג של המידע בקוד שלנו, בזמן שהשני הוא הערך המוצג למשתמשי הקצה. לדוגמא, אנו משתמשים בספרה 1 כדי לייצג הודעה במצב טיוטה ובטקסט `טיוטה` כדי להציג את הסטטוס למשתמשי הקצה. טבלה זו בנויה בעיקר מהעמודות הבאות:
  - `name`: הערך מיוצג כטקסט המוצג למשתמשי הקצה;
  - `code`: הערך המספרי של הנתון המיוצג בקוד;
  - `type`: סוג הנתון;
  - `position`: סדר התצוגה של הנתון הזה אל מול נתונים נוספים מאותו הסוג;

הדיאגרמה הבאה מציגה את תרשים הטבלאות המוצגת למעלה והקשר ביניהם.

![דיאגרמת קשרי טבלאות עבור אפליקצית הבלוג](schema.png)

שאילתות SQL ליצירת הדיאגרמה המוצג למעלה ניתנות להורדה [בעמוד הבא](http://www.yiiframework.com/demos/blog/). בהתקנת ה-Yii שלנו, הם נמצאות בקובץ `/wwwroot/yii/demos/blog/protected/data/schema.sqlite.sql`.

> Info|מידע: שמות הטבלאות שהגדרנו כולם כתובות באותיות קטנות. הסיבה לכך היא שמסדי נתונים שונים מתייחסים לאותיות גדולות-קטנות בצורה שונה ואנו רוצים להמנע מבעיות כאלו.
>
> כמו כן אנו מגדירים קידומת `tbl_` עבור כל שמות הטבלאות משני סיבות. ראשית, הקידומת מייחסת עבור טבלאות אלה סוג של "מרחב שם" במידה והם יהיו צריכים להמצא עם טבלאות נוספות באותו מסד הנתונים, אשר קורה לעיתים תכופות בשרתי אחסון שיתופיים כשמסד נתונים אחד משותף לכמה אפליקציות. שנית, שימוש בקידומת מפחית את הסיכוי שאחת משמות הטבלאות תיהיה שם שמור במסד בו אנו משתמשים.

אנו מחלקים את תהליך הפיתוח של אפליקצית הבלוג שלנו לשלושה ציוני דרך.

 * ציון דרך 1: יצירת אב טיפוס של מערכת הבלוג. היא צריכה להכיל את רוב הפונקציונליות.
 * ציון דרך 2: השלמת ניהול הודעות. זה כולל יצירה, תצוגת רשימת הודעות, תצוגת הודעה, עדכון ומחיקת הודעות.
 * ציון דרך 3: השלמת ניהול תגובות. זה כולל יצירה, תצוגת רשימת תגובות, אישור, עדכון ומחיקת תגובות.
 * ציון דרך 4: יישום וידג'טים. זה כולל תפריט משתמש, התחברות, ענן תגיות ותגובות אחרונות.
 * ציון דרך 5: כיוונים אחרונים ופריסת האפליקציה.

<div class="revision">$Id: start.design.txt 1677 2010-01-07 20:29:26Z qiang.xue $</div>

